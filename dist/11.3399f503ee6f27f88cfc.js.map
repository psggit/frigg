{"version":3,"sources":["webpack:///./src/react-apps/home/constants/roles.js","webpack:///./src/components/RoleBasedComponent.js","webpack:///./src/react-apps/home/components/manage-states/view-states.js","webpack:///./src/react-apps/home/container/manage-states.js"],"names":["ROLE_ADMIN","ROLE_SUPPORT","ROLE_SUPPORT_ADMIN","_react","__webpack_require__","RoleBasedComponent","_react2","default","Component","createElement","this","props","supportedRoles","indexOf","children","_Table","_reactRouterDom","TableHeaderItems","styles","width","data","Table","className","selectable","fixedHeader","TableHeader","displaySelectAll","adjustForCheckbox","TableRow","map","item","i","TableHeaderColumn","style","key","TableBody","displayRowCheckbox","showRowHover","loadingStates","_tableLoadingShell2","statesData","id","TableRowColumn","NavLink","to","state_name","short_name","_FlatButton2","primary","label","_redux","_reactRedux","Actions","ManageStates","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","shouldMountEditState","shouldMountCreateState","snackBar","open","message","mountEditStateDialog","bind","unmountEditStateDialog","mountCreateStateDialog","unmountCreateStateDialog","setSnackBarOptions","actions","fetchStates","setLoadingState","options","setState","stateToBeEdit","_props","maxWidth","display","justifyContent","location","pathname","_RaisedButton2","onClick","_viewStates2","connect","main","dispatch","bindActionCreators"],"mappings":"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","file":"11.3399f503ee6f27f88cfc.js","sourcesContent":["export const ROLE_ADMIN = 'admin'\nexport const ROLE_SUPPORT = 'support'\nexport const ROLE_SUPPORT_ADMIN = 'support_admin'\n","import React from 'react'\n\nclass RoleBasedComponent extends React.Component {\n  render() {\n    const hasuraRole = 'admin'\n    return (\n      <div>\n        {\n          this.props.supportedRoles.indexOf(hasuraRole) > -1\n          ? this.props.children\n          : <h2>Access Denied</h2>\n        }\n      </div>\n    )\n  }\n}\n\nexport default RoleBasedComponent\n","import React from 'react'\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n  TableRowColumn,\n} from 'material-ui/Table'\n\nimport RaisedButton from 'material-ui/RaisedButton'\nimport FlatButton from 'material-ui/FlatButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport { NavLink } from 'react-router-dom'\nimport TableLoadingShell from './../table-loading-shell'\nimport '@sass/components/_table.scss'\n\nconst TableHeaderItems = [\n  '',\n  'ID',\n  'NAME',\n  'SHORT_NAME',\n  // ''\n]\n\nconst styles = [\n  { width: '38px' },\n  { width: '60px' },\n  { width: '120px' },\n  { width: '38px' },\n  { width: '100px' }\n]\n\nfunction ViewCities(data) {\n  return (\n    <Table\n      className=\"bordered--table\"\n      selectable={false}\n      fixedHeader\n    >\n      <TableHeader displaySelectAll={false} adjustForCheckbox={false}>\n        <TableRow>\n          {\n            TableHeaderItems.map((item, i) => <TableHeaderColumn style={styles[i]} key={`table-head-col-${i}`}>{item}</TableHeaderColumn>)\n          }\n        </TableRow>\n      </TableHeader>\n      <TableBody\n        displayRowCheckbox={false}\n        showRowHover\n      >\n        {\n          !data.loadingStates\n          ? (\n            data.statesData.map(item => (\n              <TableRow key={item.id}>\n                <TableRowColumn style={styles[0]}>\n                  <NavLink\n                    // target=\"_blank\"\n                    // exact\n                    // to={`/home/manage-states/${item.state_name}?id=${item.id}`}\n                    to={`/home/manage-states/${item.state_name}?id=${item.id}&stateName=${item.state_name}&stateShortName=${item.short_name}`}\n                  >\n                    <FlatButton primary label=\"View\" />\n                  </NavLink>\n\n                </TableRowColumn>\n                <TableRowColumn style={styles[1]}>{item.id}</TableRowColumn>\n                <TableRowColumn style={styles[2]}>{item.state_name}</TableRowColumn>\n                <TableRowColumn style={styles[3]}>{item.short_name}</TableRowColumn>\n              </TableRow>\n            ))\n          )\n          : (\n            [1, 2, 3, 4, 5].map(() => (\n              <TableLoadingShell />\n            ))\n          )\n        }\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default ViewCities\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport RoleBasedComponent from '@components/RoleBasedComponent'\nimport RaisedButton from 'material-ui/RaisedButton'\nimport CircularProgress from 'material-ui/CircularProgress'\nimport '@sass/components/_circular-progress.scss'\nimport { NavLink } from 'react-router-dom'\n\nimport * as Actions from './../actions'\nimport ViewStates from './../components/manage-states/view-states'\n\nimport * as Roles from './../constants/roles'\n\nclass ManageStates extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      shouldMountEditState: false,\n      shouldMountCreateState: false,\n      snackBar: { open: false, message: '' }\n    }\n    this.mountEditStateDialog = this.mountEditStateDialog.bind(this)\n    this.unmountEditStateDialog = this.unmountEditStateDialog.bind(this)\n    this.mountCreateStateDialog = this.mountCreateStateDialog.bind(this)\n    this.unmountCreateStateDialog = this.unmountCreateStateDialog.bind(this)\n    this.setSnackBarOptions = this.setSnackBarOptions.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.actions.fetchStates()\n    this.props.actions.setLoadingState()\n  }\n\n  setSnackBarOptions(options) {\n    this.setState({ snackBar: options })\n  }\n\n  mountCreateStateDialog() {\n    this.setState({ shouldMountCreateState: true })\n  }\n\n  unmountCreateStateDialog() {\n    this.setState({ shouldMountCreateState: false })\n  }\n\n  mountEditStateDialog(stateToBeEdit) {\n    this.setState({\n      shouldMountEditState: true,\n      stateToBeEdit\n    })\n  }\n\n  unmountEditStateDialog() {\n    this.setState({ shouldMountEditState: false })\n  }\n\n  render() {\n    const { loadingStates, statesData } = this.props\n\n    return (\n      <div style={{ width: '100%', maxWidth: 800 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between'\n          }}\n        >\n          <NavLink to={`${location.pathname}/create-new-state`}>\n            <RaisedButton\n              label=\"Create new state\"\n              primary\n              onClick={this.mountCreateStateDialog}\n            />\n          </NavLink>\n\n          {/* <RaisedButton\n            onClick={this.mountFilterDialog}\n            label=\"Filter\"\n            icon={getIcon('filter')}\n          /> */}\n        </div>\n\n        <br />\n\n        <h3>Showing available states</h3>\n\n        <ViewStates\n          loadingStates={loadingStates}\n          statesData={statesData}\n          mountEditStateDialog={this.mountEditStateDialog}\n        />\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => state.main\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ManageStates)\n"],"sourceRoot":""}